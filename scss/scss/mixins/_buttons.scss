@mixin button-variant($background, $active-background: $background, $hover-background: darken($background, 7.5%)) {
  color: color-yiq($background);
  background-color: $background;

  @include hover() {
    color: color-yiq($hover-background);
    background-color: lighten($active-background, 4%);
  }

  &:focus,
  &.focus {
    color: color-yiq($hover-background);
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
  }
}

@mixin button-outline-variant($color) {

  @if ($color == $yellow) {
    color: darken($yellow, 10%);
  }
  @else{
    color: $color;
  }
  box-shadow: none !important;

  @include hover() {
    color: darken($color, 12.5%);
  }

  &:focus,
  &.focus {
    outline: 0;
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: $color;
    box-shadow: none;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: none;
    }
  }
}


@mixin button-outline-v2-variant($color) {
 @if ($color == $yellow) {
    color: darken($yellow, 10%);
  }
  @else{
    color: $color;
  }
  border: 2px solid $color;
  background-color: transparent;
  background-image: none;

  @include hover {
    color: darken($color, 7.5%);
    border: 2px solid darken($color, 7.5%);
  }

  /*&:focus,
  &.focus {
    //box-shadow: 0 0 0 3px rgba($color, .5);
  }*/

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color;
  }
}

@mixin button-gradient-variant($color, $background) {
  $active-background: $background;
  color: $color;
  background: $background;

  // Hover and focus styles are shared
  @include hover {
    color: $color;
    background: $active-background;
  }
  &:focus,
  &.focus {
    box-shadow: none;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      //box-shadow: $btn-box-shadow, 0 0 0 2px;
    } @else {
      //box-shadow: 0 0 0 2px;
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background: $background;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color;
    background: $active-background;
    box-shadow: none;
  }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  @include font-size($font-size);
  line-height: $line-height;
  // Manually declare to provide an override to the browser default
  @include border-radius($border-radius, 0);
}
