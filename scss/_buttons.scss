@import "scss/shadow";

.btn {
  display: inline-block;
  font-family: "Exo 2", "Fira Code", "Roboto Mono", monospace;
  font-weight: 500;
  color: $body-color;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  //text-transform: capitalize;
  letter-spacing: 1px;
  outline: 0;
  border: 0;
  margin: 0.125rem;
  cursor: pointer;
  @include button-size(
    $btn-padding-y,
    $btn-padding-x,
    $btn-font-size,
    $input-btn-line-height,
    $btn-border-radius
  );
  @include transition($btn-transition);

  &.btn-raised {
    @include shadow-2dp();

    @include hover() {
      @include shadow-4dp();
    }
  }

  &.btn-rounded {
    border-radius: $btn-rounded-border;
  }

  &.btn-flat {
    border-radius: $border-radius-flat;
  }

  @include hover() {
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    background-image: none;
    box-shadow: none;

    &:focus {
      outline: 0;
      box-shadow: none;
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value, $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-v2-#{$color} {
    @include button-outline-v2-variant($value);
  }
}

.btn-gradient-peach {
  @include button-gradient-variant($white, $gradient-peach);
}
.btn-gradient-aqua {
  @include button-gradient-variant($white, $gradient-aqua);
}
.btn-gradient-purple {
  @include button-gradient-variant($white, $gradient-purple);
}
.btn-gradient-blue {
  @include button-gradient-variant($white, $gradient-blue);
}

// Block button

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  text-decoration: $link-decoration;

  @include hover() {
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}

//
// Button Sizes
//

.btn-lg {
  @include button-size(
    $btn-padding-y-lg,
    $btn-padding-x-lg,
    $btn-font-size-lg,
    $btn-line-height-lg,
    $btn-border-radius-lg
  );
}

.btn-sm {
  @include button-size(
    $btn-padding-y-sm,
    $btn-padding-x-sm,
    $btn-font-size-sm,
    $btn-line-height-sm,
    $btn-border-radius-sm
  );
}
